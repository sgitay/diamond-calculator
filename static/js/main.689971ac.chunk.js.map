{"version":3,"sources":["components/Header.js","App.js","constants.js","Routes.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Navbar","Brand","Link","to","appbaseRef","Appbase","url","app","credentials","item_order","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","shape","clarity","hits","originalHits","userEnteredRelToList","userEnteredSellPc","userEnteredTotalPc","isLoading","activeInputField","initialRendering","userEnteredWeight","checkBoxStatus","weightInclude","handleColorDropdownChange","bind","assertThisInitialized","handleClarityDropdownChange","handleShapeDropdownChange","changeRelToList","totalPriceChange","sellPcChange","handleWeightInputChange","handleCheckBoxStatusChange","handleWeightChange","value","_this2","setState","getPrice","_this3","_this4","e","target","array","order","key","sort","b","A","B","indexOf","_this5","_this$state","search","type","body","query","bool","must","term","shape.keyword","color.keyword","clarity.keyword","_source","includes","excludes","from","then","response","catch","error","console","log","checked","values","formattedValue","_this$state2","length","round","ppc","_this$state3","sellPrice","listPrice","toNumber","_this$state4","totalPrice","_this$state5","_this$state5$userEnte","relToList","_this$state6","_this$state6$userEnte","_this$state7","_this$state8","wsprice","isNaN","price","Number","toFixed","toString","cprice","priceO","i","p","charAt","slice","_this6","_this$state9","getListPrice","weight","getSPWhenRelToListActive","getTPWhenRelToListActive","getRelToListWhenSPActive","getTPWhenSPActive","getRelToListWhenTPActive","getSPWhenTPActive","resultHtml","className","htmlFor","id","onChange","number_format_default","disabled","thousandSeparator","prefix","convertPriceToCode","onValueChange","components_Header","index_es","componentId","dataField","title","showCount","transformData","list","mapOrder","nextProps","prevState","newHits","filter","o","parseFloat","fromweight","toweight","Component","Routes","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.689971ac.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  return (\n    <header>\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">Diamond Calculator</Link>\n          </Navbar.Brand>\n        </Navbar.Header>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { ReactiveBase, SingleDropdownList } from '@appbaseio/reactivesearch';\nimport Appbase from 'appbase-js';\nimport filter from 'lodash/filter';\nimport round from 'lodash/round';\nimport NumberFormat from 'react-number-format';\nimport toNumber from 'lodash/toNumber';\nimport {\n  AppbaseApp,\n  AppbaseAppCredential,\n  HOST_URL,\n  AppbaseAppType\n} from './constants';\nimport Header from './components/Header.js';\n\n// Create app instance\nconst appbaseRef = Appbase({\n  url: HOST_URL,\n  app: AppbaseApp,\n  credentials: AppbaseAppCredential\n});\nconst item_order = [\n  'FL',\n  'IF',\n  'VVS1',\n  'VVS2',\n  'VS1',\n  'VS2',\n  'SI1',\n  'SI2',\n  'SI3',\n  'I1',\n  'I2',\n  'I3'\n];\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '',\n      shape: '',\n      clarity: '',\n      hits: [],\n      originalHits: [],\n      userEnteredRelToList: 0,\n      userEnteredSellPc: 0,\n      userEnteredTotalPc: 0,\n      isLoading: false,\n      activeInputField: '',\n      initialRendering: true,\n      userEnteredWeight: '',\n      checkBoxStatus: false,\n      weightInclude: false\n    };\n\n    this.handleColorDropdownChange = this.handleColorDropdownChange.bind(this);\n    this.handleClarityDropdownChange = this.handleClarityDropdownChange.bind(\n      this\n    );\n    this.handleShapeDropdownChange = this.handleShapeDropdownChange.bind(this);\n    this.changeRelToList = this.changeRelToList.bind(this);\n\n    // this.getPrice = this.getPrice.bind(this);\n    // this.getSellPrice = this.getSellPrice.bind(this);\n    // this.getRelToList = this.getRelToList.bind(this);\n\n    this.totalPriceChange = this.totalPriceChange.bind(this);\n    this.sellPcChange = this.sellPcChange.bind(this);\n    this.handleWeightInputChange = this.handleWeightInputChange.bind(this);\n    this.handleCheckBoxStatusChange = this.handleCheckBoxStatusChange.bind(\n      this\n    );\n    this.handleWeightChange = this.handleWeightChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log('prevState', prevState);\n    let {\n      userEnteredWeight,\n      originalHits,\n      color,\n      clarity,\n      shape,\n      weightInclude\n    } = prevState;\n\n    // if (color && shape && clarity && userEnteredWeight) {\n    //   let newHits = filter(originalHits, o => {\n    //     return (\n    //       Number.parseFloat(o._source.fromweight) <= userEnteredWeight &&\n    //       userEnteredWeight <= Number.parseFloat(o._source.toweight)\n    //     );\n    //   });\n    //   // If there is no any record found for given range,\n    //   // then use records from range `5-6`\n\n    //   if (!newHits.length) {\n    //     console.log('in condition');\n    //     newHits = filter(originalHits, o => {\n    //       return (\n    //         Number.parseFloat(o._source.fromweight) >= 5 &&\n    //         Number.parseFloat(o._source.toweight) <= 5.99\n    //       );\n    //     });\n    //     if (weightInclude && userEnteredWeight >= 10) {\n    //       console.log('userEnteredWeight', userEnteredWeight);\n    //       newHits = filter(originalHits, o => {\n    //         return (\n    //           Number.parseFloat(o._source.fromweight) >= 10 &&\n    //           Number.parseFloat(o._source.toweight) <= 10.99\n    //         );\n    //       });\n    //       console.log('10s hit', newHits);\n    //     }\n    //   }\n\n    //   // Return new state\n    //   return {\n    //     hits: newHits\n    //   };\n    // }\n if (color && shape && clarity && userEnteredWeight) {\n      let newHits = filter(originalHits, o => {\n        return (\n          Number.parseFloat(o._source.fromweight) <= userEnteredWeight &&\n          userEnteredWeight <= Number.parseFloat(o._source.toweight)\n        );\n      });\n      // If there is no any record found for given range,\n      // then use records from range `5-6`\n      if (!newHits.length) {\n        newHits = filter(originalHits, o => {\n          return (\n            Number.parseFloat(o._source.fromweight) >= 5 &&\n            Number.parseFloat(o._source.toweight) <= 6\n          );\n        });\n          if (weightInclude && userEnteredWeight >= 10) {\n          console.log('userEnteredWeight', userEnteredWeight);\n          newHits = filter(originalHits, o => {\n            return (\n              Number.parseFloat(o._source.fromweight) >= 10 &&\n              Number.parseFloat(o._source.toweight) <= 10.99\n            );\n          });\n          console.log('10s hit', newHits);\n        }\n\n      }\n\n      // Return new state\n      return {\n        hits: newHits\n      };\n\n    }\n\n    // Return null to indicate no change to state.\n    return null;\n  }\n\n  handleColorDropdownChange(value) {\n    this.setState(\n      {\n        color: value\n      },\n      () => {\n        this.getPrice();\n      }\n    );\n  }\n\n  handleClarityDropdownChange(value) {\n    this.setState(\n      {\n        clarity: value\n      },\n      () => {\n        this.getPrice();\n      }\n    );\n  }\n\n  handleShapeDropdownChange(value) {\n    this.setState(\n      {\n        shape: value\n      },\n      () => {\n        this.getPrice();\n      }\n    );\n  }\n\n  handleWeightInputChange(e) {\n    this.setState({\n      userEnteredWeight: e.target.value,\n      activeInputField: 'WEIGHT'\n    });\n  }\n\n  mapOrder(array, order, key) {\n    array.sort(function(a, b) {\n      var A = a[key],\n        B = b[key];\n      if (order.indexOf(A) > order.indexOf(B)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    return array;\n  }\n\n  getPrice() {\n    let { color, shape, clarity } = this.state;\n\n    if (color === '' || shape === '' || clarity === '') {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n\n    appbaseRef\n      .search({\n        type: AppbaseAppType,\n        body: {\n          query: {\n            bool: {\n              must: [\n                {\n                  bool: {\n                    must: [\n                      {\n                        term: {\n                          'shape.keyword': shape\n                        }\n                      },\n                      {\n                        term: {\n                          'color.keyword': color\n                        }\n                      },\n                      {\n                        term: {\n                          'clarity.keyword': clarity\n                        }\n                      }\n                    ]\n                  }\n                }\n              ]\n            }\n          },\n          // size: 1,\n          _source: {\n            includes: ['*'],\n            excludes: []\n          },\n          from: 0\n        }\n      })\n      .then(response => {\n        this.setState({\n          hits: response.hits.hits,\n          originalHits: response.hits.hits,\n          isLoading: false,\n          initialRendering: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          isLoading: false,\n          initialRendering: false\n        });\n        console.log('Error: ', error);\n      });\n  }\n\n  handleCheckBoxStatusChange(e) {\n    this.setState({\n      checkBoxStatus: e.target.checked\n    });\n  }\n  handleWeightChange(e) {\n    this.setState({\n      activeInputField: 'WEIGHT',\n      weightInclude: e.target.checked\n    });\n  }\n  changeRelToList(e) {\n    this.setState({\n      activeInputField: 'REL_TO_LIST',\n      userEnteredRelToList: e.target.value\n    });\n  }\n\n  totalPriceChange(values) {\n    const { formattedValue, value } = values;\n    this.setState({\n      activeInputField: 'TOTAL_PRICE',\n      userEnteredTotalPc: value\n    });\n  }\n\n  sellPcChange(values) {\n    const { formattedValue, value } = values;\n    this.setState({\n      activeInputField: 'SELL_PRICE',\n      userEnteredSellPc: value\n    });\n  }\n\n  getListPrice() {\n    let { hits, userEnteredWeight } = this.state;\n    if (!hits.length) {\n      return 0;\n    }\n    if (!userEnteredWeight) {\n      return 0;\n    }\n    let per_carat = round(hits[0]._source.ppc, 2);\n    return per_carat;\n  }\n\n  getSPWhenRelToListActive() {\n    console.log('getSPWhenRelToListActive');\n    let { userEnteredRelToList, hits } = this.state;\n    let sellPrice = 0;\n    if (!hits.length) {\n      return sellPrice;\n    }\n    if (userEnteredRelToList === '') {\n      return 0;\n    }\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    sellPrice =\n      toNumber(listPrice) + toNumber(listPrice * (userEnteredRelToList / 100));\n    // console.log('SELL_PRICE', sellPrice);\n    return round(sellPrice, 2);\n  }\n\n  getTPWhenRelToListActive() {\n    console.log('getTPWhenRelToListActive');\n    let { hits, userEnteredWeight, userEnteredRelToList } = this.state;\n    let totalPrice = 0;\n    if (!hits.length) {\n      return totalPrice;\n    }\n    if (userEnteredRelToList === '') {\n      return 0;\n    }\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    let sellPrice =\n      toNumber(listPrice) + toNumber(listPrice * (userEnteredRelToList / 100));\n    // console.log('sellPriceREl', sellPrice);\n    if (userEnteredWeight > 0) {\n      totalPrice = sellPrice * userEnteredWeight;\n    }\n    return round(totalPrice, 2);\n  }\n\n  getRelToListWhenSPActive() {\n    console.log('getRelToListWhenSPActive');\n    let { userEnteredSellPc = 0, hits } = this.state;\n    let relToList = '';\n    if (!hits.length) {\n      return relToList;\n    }\n    if (userEnteredSellPc === '') {\n      return 0;\n    }\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    relToList = ((userEnteredSellPc - listPrice) / listPrice) * 100;\n    return round(relToList, 2);\n  }\n\n  getTPWhenSPActive() {\n    console.log('getTPWhenSPActive');\n    let { userEnteredSellPc = 0, userEnteredWeight, hits } = this.state;\n    let totalPrice = '';\n    if (!hits.length) {\n      return totalPrice;\n    }\n    if (userEnteredSellPc === '') {\n      return 0;\n    }\n    //calculate total price\n    totalPrice = userEnteredSellPc * userEnteredWeight;\n    return round(totalPrice, 2);\n  }\n\n  getRelToListWhenTPActive() {\n    console.log('getRelToListWhenTPActive');\n    let {\n      hits,\n      userEnteredTotalPc,\n      userEnteredWeight,\n      weightInclude\n    } = this.state;\n    let relToList = 0;\n    if (!hits.length) {\n      return relToList;\n    }\n    if (userEnteredTotalPc === '') {\n      return 0;\n    }\n    if (userEnteredWeight === '') {\n      return 0;\n    }\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    let sellPrice = userEnteredTotalPc / userEnteredWeight;\n    // console.log('sellPriceaa', sellPrice);\n    relToList = ((sellPrice - listPrice) / listPrice) * 100;\n    return round(relToList, 2);\n  }\n\n  getSPWhenTPActive() {\n    let {\n      userEnteredTotalPc,\n      userEnteredWeight,\n      hits,\n      weightInclude\n    } = this.state;\n    console.log('getSPWhenTPActive',hits);\n    let listPrice = hits[0] && hits[0]._source.ppc;\n    let sellPrice = '';\n    if (!hits.length) {\n      return sellPrice;\n    }\n    sellPrice = userEnteredTotalPc / userEnteredWeight;\n    // console.log('sellPricessA', sellPrice);\n    return round(sellPrice, 2);\n  }\n\n  convertPriceToCode(wsprice) {\n    if (isNaN(wsprice) || wsprice === null || wsprice === '' || wsprice === 0)\n      return '';\n\n    wsprice = Number(wsprice);\n\n    var price = wsprice.toFixed(2).toString();\n\n    var cprice = '';\n    var priceO = '';\n\n    for (var i = 0; i < price.length; i++) {\n      var p = price.charAt(i);\n      if (p === '.') {\n        break;\n      }\n\n      var lastChar;\n\n      if (p === '1') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'B';\n            priceO += p;\n          }\n        } else {\n          cprice += 'B';\n          priceO += p;\n        }\n      } else if (p === '2') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'I';\n            priceO += p;\n          }\n        } else {\n          cprice += 'I';\n          priceO += p;\n        }\n      } else if (p === '3') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'G';\n            priceO += p;\n          }\n        } else {\n          cprice += 'G';\n          priceO += p;\n        }\n      } else if (p === '4') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'E';\n            priceO += p;\n          }\n        } else {\n          cprice += 'E';\n          priceO += p;\n        }\n      } else if (p === '5') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'S';\n            priceO += p;\n          }\n        } else {\n          cprice += 'S';\n          priceO += p;\n        }\n      } else if (p === '6') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'T';\n            priceO += p;\n          }\n        } else {\n          cprice += 'T';\n          priceO += p;\n        }\n      } else if (p === '7') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'H';\n            priceO += p;\n          }\n        } else {\n          cprice += 'H';\n          priceO += p;\n        }\n      } else if (p === '8') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'A';\n            priceO += p;\n          }\n        } else {\n          cprice += 'A';\n          priceO += p;\n        }\n      } else if (p === '9') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'L';\n            priceO += p;\n          }\n        } else {\n          cprice += 'L';\n          priceO += p;\n        }\n      } else if (p === '0') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'F';\n            priceO += p;\n          }\n        } else {\n          cprice += 'F';\n          priceO += p;\n        }\n      }\n    }\n    return cprice;\n  }\n\n  render() {\n    let {\n      isLoading,\n      activeInputField,\n      userEnteredRelToList,\n      userEnteredTotalPc,\n      userEnteredSellPc,\n      userEnteredWeight,\n      hits,\n      initialRendering,\n      checkBoxStatus,\n      weightInclude,\n      shape,\n      color,\n      clarity\n    } = this.state;\n    // console.log('checkBoxStatus', checkBoxStatus);\n    let listPrice = this.getListPrice();\n    let relToList = 0;\n    let sellPrice = listPrice; // initially SP is same as LP\n    console.log('render sellPrice', sellPrice);\n    let totalPrice = listPrice * userEnteredWeight;\n\n    let weight = userEnteredWeight;\n    switch (activeInputField) {\n      case 'REL_TO_LIST':\n        console.log('REL_TO_LIST');\n        relToList = userEnteredRelToList;\n        sellPrice = this.getSPWhenRelToListActive();\n        totalPrice = this.getTPWhenRelToListActive();\n        break;\n\n      case 'SELL_PRICE':\n        console.log('SELL_PRICE');\n        relToList = this.getRelToListWhenSPActive();\n        sellPrice = userEnteredSellPc;\n        totalPrice = this.getTPWhenSPActive();\n\n        break;\n\n      case 'TOTAL_PRICE':\n        console.log('TOTAL_PRICE');\n        relToList = this.getRelToListWhenTPActive();\n        sellPrice = this.getSPWhenTPActive();\n        totalPrice = userEnteredTotalPc;\n        break;\n\n      default:\n        break;\n    }\n\n    let resultHtml = '';\n    if (!initialRendering && !hits.length && userEnteredWeight !== '') {\n      resultHtml = <div className=\"No-records\">No record(s) available.</div>;\n    } else {\n      resultHtml = (\n        <fieldset className=\"form-fieldset\">\n          <legend className=\"form-legend\">Result:</legend>\n          {isLoading && (\n            <div className=\"App-Loader\">Hang on, fetching results...</div>\n          )}\n\n          <div className=\"outputSectionRow\">\n            <div className=\"outputColumns xs-device-set-margin\">\n              <div className=\"show-code-field\">\n                <label\n                  htmlFor=\"ValueToCodeConvert\"\n                  className=\"conversion-label\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    className=\"show-code-input\"\n                    id=\"ValueToCodeConvert\"\n                    onChange={this.handleCheckBoxStatusChange}\n                  />\n                  <span>Show Code</span>\n                </label>\n              </div>\n            </div>\n            <div className=\"outputColumns xs-device-set-margin\">\n              <h2 className=\"form-control-label\">List Price</h2>\n              {!checkBoxStatus ? (\n                <NumberFormat\n                  disabled\n                  value={listPrice}\n                  className=\"form-control\"\n                  thousandSeparator={true}\n                  prefix={'$'}\n                />\n              ) : (\n                ''\n              )}\n              {checkBoxStatus && listPrice ? (\n                <div className=\"showCode\">\n                  {this.convertPriceToCode(listPrice)}\n                </div>\n              ) : null}\n            </div>\n            <div className=\"outputColumns xs-device-set-margin\">\n              <h2 className=\"form-control-label\">Sell Price</h2>\n              {!checkBoxStatus ? (\n                <NumberFormat\n                  value={sellPrice}\n                  className=\"form-control\"\n                  thousandSeparator={true}\n                  onValueChange={values => this.sellPcChange(values)}\n                  prefix={'$'}\n                />\n              ) : (\n                ''\n              )}\n              {checkBoxStatus && sellPrice ? (\n                <div className=\"showCode\">\n                  {this.convertPriceToCode(sellPrice)}\n                </div>\n              ) : null}\n            </div>\n            <div className=\"outputColumns xs-device-set-margin\">\n              <h2 className=\"form-control-label\">Total Price</h2>\n              {!checkBoxStatus ? (\n                <NumberFormat\n                  value={totalPrice}\n                  className=\"form-control\"\n                  thousandSeparator={true}\n                  onValueChange={values => this.totalPriceChange(values)}\n                  prefix={'$'}\n                />\n              ) : (\n                ''\n              )}\n              {checkBoxStatus && totalPrice ? (\n                <div className=\"showCode\">\n                  {this.convertPriceToCode(totalPrice)}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </fieldset>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <ReactiveBase\n          app={AppbaseApp}\n          credentials={AppbaseAppCredential}\n          type={AppbaseAppType}\n        >\n          <div id=\"input-area\">\n            <fieldset className=\"form-fieldset\">\n              <legend className=\"form-legend\">FillUp Details:</legend>\n\n              <div className=\"inputSectionRow\">\n                <div className=\"inputColumns xs-device-set-margin\">\n                  <SingleDropdownList\n                    componentId=\"shape\"\n                    className=\"reactive-form-control\"\n                    dataField=\"shape.keyword\"\n                    title=\"Shape\"\n                    showCount={false}\n                    onValueChange={this.handleShapeDropdownChange}\n                  />\n                </div>\n                <div className=\"inputColumns xs-device-set-margin\">\n                  <SingleDropdownList\n                    componentId=\"color\"\n                    className=\"reactive-form-control\"\n                    dataField=\"color.keyword\"\n                    title=\"Color\"\n                    showCount={false}\n                    onValueChange={this.handleColorDropdownChange}\n                  />\n                </div>\n                <div className=\"inputColumns xs-device-set-margin\">\n                  <SingleDropdownList\n                    componentId=\"clarity\"\n                    className=\"reactive-form-control\"\n                    dataField=\"clarity.keyword\"\n                    title=\"Clarity\"\n                    showCount={false}\n                    transformData={list => {\n                      var ordered_array;\n                      ordered_array = this.mapOrder(list, item_order, 'key');\n                      return ordered_array;\n                    }}\n                    onValueChange={this.handleClarityDropdownChange}\n                  />\n                </div>\n                <div className=\"inputColumns\">\n                  <h2 className=\"form-control-label\">Weight</h2>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    onChange={this.handleWeightInputChange}\n                    value={weight}\n                  />\n                  <label className=\"include-weight checkbox-inline\">\n                    <input\n                      type=\"checkbox\"\n                      value={weightInclude}\n                      onChange={this.handleWeightChange}\n                    />\n                    Include 10's weight range.\n                  </label>\n                </div>\n                <div className=\"inputColumns xs-device-set-margin\">\n                  <h2 className=\"form-control-label\">Mark(%)</h2>\n                  {userEnteredWeight && color && shape && clarity ? (\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      onChange={this.changeRelToList}\n                      value={relToList}\n                    />\n                  ) : (\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      onChange={this.changeRelToList}\n                      value={relToList}\n                      disabled\n                    />\n                  )}\n                </div>\n              </div>\n            </fieldset>\n          </div>\n\n          <div id=\"result-area\">{resultHtml}</div>\n        </ReactiveBase>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// Constants\nexport const HOST_URL = 'https://scalr.api.appbase.io';\n// export const AppbaseApp = 'kwfl-rapnet-prices';\n// export const AppbaseAppCredential =\n//   'kg4GbKwx6:063eeb44-18e9-48c9-b5a0-4541d889597f';\nexport const AppbaseApp = 'calculator-app';\nexport const AppbaseAppCredential =\n  'O8OIAs7PU:2b14ce86-4bbf-4147-9139-ce465d2c7f16';\nexport const AppbaseAppType = 'CalculatorData';\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from './App.js';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route exact path=\"*\" component={App} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes.js';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}