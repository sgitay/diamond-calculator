{"version":3,"sources":["components/Header.js","App.js","constants.js","Routes.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Navbar","Brand","Link","to","appbaseRef","Appbase","url","app","credentials","item_order","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","shape","clarity","hits","originalHits","userEnteredRelToList","userEnteredSellPc","userEnteredTotalPc","isLoading","activeInputField","initialRendering","userEnteredWeight","userVal","checkBoxStatus","weightInclude","handleColorDropdownChange","bind","assertThisInitialized","handleClarityDropdownChange","handleShapeDropdownChange","changeRelToList","clearAll","totalPriceChange","sellPcChange","handleWeightInputChange","handleCheckBoxStatusChange","handleWeightChange","value","_this2","setState","getPrice","_this3","_this4","e","console","log","target","array","order","key","sort","b","A","B","indexOf","_this5","_this$state","search","type","body","query","bool","must","term","shape.keyword","color.keyword","clarity.keyword","size","_source","includes","excludes","from","then","response","catch","error","checked","val","isEmpty","val1","Number","replace","result","parseFloat","_this$state2","length","round","ppc","_this$state3","sellPrice","listPrice","toNumber","_this$state4","totalPrice","_this$state5","_this$state5$userEnte","relToList","_this$state6","_this$state6$userEnte","_this$state7","_this$state8","wsprice","isNaN","price","toFixed","toString","cprice","priceO","i","p","charAt","slice","_this6","_this$state9","getListPrice","relToList1","weight","getSPWhenRelToListActive","getTPWhenRelToListActive","getRelToListWhenSPActive","getTPWhenSPActive","getRelToListWhenTPActive","getSPWhenTPActive","resultHtml","className","htmlFor","id","onChange","cleave_js_react_default","disabled","options","numeral","prefix","convertPriceToCode","components_Header","index_es","componentId","dataField","title","showCount","onValueChange","transformData","list","mapOrder","render","clearAllLabel","clearValues","onClick","preventDefault","reset","nextProps","prevState","newHits","filter","o","fromweight","toweight","Component","Routes","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","src_Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a02cd716.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  return (\n    <header>\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">Diamond Calculator</Link>\n          </Navbar.Brand>\n        </Navbar.Header>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport {\n  ReactiveBase,\n  SingleDropdownList,\n  SelectedFilters\n} from '@appbaseio/reactivesearch';\nimport Appbase from 'appbase-js';\nimport filter from 'lodash/filter';\nimport round from 'lodash/round';\n// import trim from 'lodash/trim';\n// import currencyFormatter from 'currency-formatter';\n// import NumberFormat from 'react-number-format';\nimport isEmpty from 'lodash/isEmpty';\nimport toNumber from 'lodash/toNumber';\n// import CurrencyInput from 'react-currency-input';\nimport Cleave from 'cleave.js/react';\nimport {\n  AppbaseApp,\n  AppbaseAppCredential,\n  HOST_URL,\n  AppbaseAppType\n} from './constants';\nimport Header from './components/Header.js';\n\n// Create app instance\nconst appbaseRef = Appbase({\n  url: HOST_URL,\n  app: AppbaseApp,\n  credentials: AppbaseAppCredential\n});\nconst item_order = [\n  'FL',\n  'IF',\n  'VVS1',\n  'VVS2',\n  'VS1',\n  'VS2',\n  'SI1',\n  'SI2',\n  'SI3',\n  'I1',\n  'I2',\n  'I3'\n];\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '',\n      shape: '',\n      clarity: '',\n      hits: [],\n      originalHits: [],\n      userEnteredRelToList: 0,\n      userEnteredSellPc: '',\n      userEnteredTotalPc: 0,\n      isLoading: false,\n      activeInputField: '',\n      initialRendering: true,\n      userEnteredWeight: '',\n      userVal: 0,\n      checkBoxStatus: false,\n      weightInclude: false\n    };\n\n    this.handleColorDropdownChange = this.handleColorDropdownChange.bind(this);\n    this.handleClarityDropdownChange = this.handleClarityDropdownChange.bind(\n      this\n    );\n    this.handleShapeDropdownChange = this.handleShapeDropdownChange.bind(this);\n    this.changeRelToList = this.changeRelToList.bind(this);\n\n    // this.getPrice = this.getPrice.bind(this);\n    // this.getSellPrice = this.getSellPrice.bind(this);\n    // this.getRelToList = this.getRelToList.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n    this.totalPriceChange = this.totalPriceChange.bind(this);\n    this.sellPcChange = this.sellPcChange.bind(this);\n    this.handleWeightInputChange = this.handleWeightInputChange.bind(this);\n    this.handleCheckBoxStatusChange = this.handleCheckBoxStatusChange.bind(\n      this\n    );\n    this.handleWeightChange = this.handleWeightChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log('prevState', prevState);\n    let {\n      userEnteredWeight,\n      originalHits,\n      color,\n      clarity,\n      shape,\n      weightInclude\n    } = prevState;\n\n    if (color && shape && clarity && userEnteredWeight) {\n      let newHits = filter(originalHits, o => {\n        return (\n          Number.parseFloat(o._source.fromweight) <= Number.parseFloat(userEnteredWeight).toFixed(2) &&\n          Number.parseFloat(userEnteredWeight).toFixed(2) <= Number.parseFloat(o._source.toweight)\n        );\n      });\n      // If there is no any record found for given range,\n      // then use records from range `5-6`\n      if (userEnteredWeight >= 5) {\n        newHits.length = 0;\n      }\n      if (!newHits.length) {\n        if (weightInclude && Number.parseFloat(userEnteredWeight).toFixed(2) >= 10) {\n          // console.log('userEnteredWeight', userEnteredWeight);\n          newHits = filter(originalHits, o => {\n            return (\n              Number.parseFloat(o._source.fromweight).toFixed(2) >= 10 &&\n              Number.parseFloat(o._source.toweight).toFixed(2) <= 10.99\n            );\n          });\n          // console.log('10s hit', newHits);\n        } else if (Number.parseFloat(userEnteredWeight).toFixed(2) >= 5) {\n          newHits = filter(originalHits, o => {\n            return (\n              Number.parseFloat(o._source.fromweight).toFixed(2) >= 5 &&\n              Number.parseFloat(o._source.toweight).toFixed(2) <= 5.99\n            );\n          });\n        }\n      }\n\n      // Return new state\n      return {\n        hits: newHits\n      };\n    }\n\n    // Return null to indicate no change to state.\n    return null;\n  }\n\n  handleColorDropdownChange(value) {\n    this.setState(\n      {\n        color: value\n      },\n      () => {\n        this.getPrice();\n      }\n    );\n  }\n\n  handleClarityDropdownChange(value) {\n    this.setState(\n      {\n        clarity: value\n      },\n      () => {\n        this.getPrice();\n      }\n    );\n  }\n\n  handleShapeDropdownChange(value) {\n    this.setState(\n      {\n        shape: value\n      },\n      () => {\n        this.getPrice();\n      }\n    );\n  }\n\n  handleWeightInputChange(e) {\n    console.log('handleWeightInputChange', e.target.value);\n    this.setState({\n      userEnteredWeight: e.target.value,\n      activeInputField: 'WEIGHT'\n    });\n  }\n  clearAll() {\n    console.log('clearAll');\n\n    this.setState({\n      userEnteredWeight: '',\n      userEnteredRelToList: 0,\n      userEnteredSellPc: 0,\n      userEnteredTotalPc: 0,\n      userVal: 0,\n      isLoading:false,\n      activeInputField: '',\n      checkBoxStatus: false,\n      weightInclude: false\n    });\n  }\n  mapOrder(array, order, key) {\n    array.sort(function(a, b) {\n      var A = a[key],\n        B = b[key];\n      if (order.indexOf(A) > order.indexOf(B)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    return array;\n  }\n\n  getPrice() {\n    let { color, shape, clarity } = this.state;\n\n    if (color === '' || shape === '' || clarity === '') {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n\n    appbaseRef\n      .search({\n        type: AppbaseAppType,\n        body: {\n          query: {\n            bool: {\n              must: [\n                {\n                  bool: {\n                    must: [\n                      {\n                        term: {\n                          'shape.keyword': shape\n                        }\n                      },\n                      {\n                        term: {\n                          'color.keyword': color\n                        }\n                      },\n                      {\n                        term: {\n                          'clarity.keyword': clarity\n                        }\n                      }\n                    ]\n                  }\n                }\n              ]\n            }\n          },\n          size: 1000,\n          _source: {\n            includes: ['*'],\n            excludes: []\n          },\n          from: 0\n        }\n      })\n      .then(response => {\n        console.log(response);\n        this.setState({\n          hits: response.hits.hits,\n          originalHits: response.hits.hits,\n          isLoading: false,\n          initialRendering: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          isLoading: false,\n          initialRendering: false\n        });\n        // console.log('Error: ', error);\n      });\n  }\n\n  handleCheckBoxStatusChange(e) {\n    this.setState({\n      checkBoxStatus: e.target.checked\n    });\n  }\n  handleWeightChange(e) {\n    this.setState({\n      activeInputField: 'WEIGHT',\n      weightInclude: e.target.checked\n    });\n  }\n\n  changeRelToList(e) {\n    let val = e.target.value;\n    // console.log('e.target.value;', e.target.value);\n    if (isEmpty(val)) {\n      // console.log('isEmpty');\n      val = 0;\n    }\n    this.setState({\n      activeInputField: 'REL_TO_LIST',\n      userEnteredRelToList: val,\n      userVal: e.target.value\n    });\n  }\n\n  totalPriceChange(e) {\n    // const { formattedValue, value } = values;\n    console.log('e.target.value', e.target.value);\n    let val1 = e.target.value;\n    console.log('val1', val1);\n    // console.log('sp value',value)\n    // let value, prifix;\n    let value = Number(val1.replace(/[$,]+/g, ''));\n    console.log('value', value);\n    let result = parseFloat(value);\n    console.log('result', result);\n    this.setState({\n      activeInputField: 'TOTAL_PRICE',\n      userEnteredTotalPc: result\n    });\n  }\n\n  sellPcChange(e) {\n    console.log('e.target.value', e.target.value);\n    let val1 = e.target.value;\n    console.log('val1', val1);\n    if(val1 ==\"$\")\n    {\n      console.log('$ found')\n    }\n    let value = Number(val1.replace(/[$,]+/g, ''));\n\n    console.log('value', value);\n    let result = parseFloat(value);\n    console.log('result', result);\n\n    this.setState({\n      activeInputField: 'SELL_PRICE',\n      userEnteredSellPc: result\n    });\n  }\n\n  getListPrice() {\n    let { hits, userEnteredWeight } = this.state;\n    if (!hits.length) {\n      return 0;\n    }\n    if (!userEnteredWeight) {\n      return 0;\n    }\n    let per_carat = round(hits[0]._source.ppc, 2);\n    return per_carat;\n  }\n\n  getSPWhenRelToListActive() {\n    // console.log('getSPWhenRelToListActive');\n    let { userEnteredRelToList, hits } = this.state;\n    let sellPrice = 0;\n    if (!hits.length) {\n      return sellPrice;\n    }\n    if (userEnteredRelToList === '') {\n      return 0;\n    }\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    sellPrice =\n      toNumber(listPrice) + toNumber(listPrice * (userEnteredRelToList / 100));\n    // console.log('SELL_PRICE', sellPrice);\n    return round(sellPrice, 2);\n  }\n\n  getTPWhenRelToListActive() {\n    // console.log('getTPWhenRelToListActive');\n    let { hits, userEnteredWeight, userEnteredRelToList } = this.state;\n    let totalPrice = 0;\n    if (!hits.length) {\n      return totalPrice;\n    }\n    if (userEnteredRelToList === '') {\n      return 0;\n    }\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    let sellPrice =\n      toNumber(listPrice) + toNumber(listPrice * (userEnteredRelToList / 100));\n    // console.log('sellPriceREl', sellPrice);\n    if (userEnteredWeight > 0) {\n      totalPrice = sellPrice * userEnteredWeight;\n    }\n    return round(totalPrice, 2);\n  }\n\n  getRelToListWhenSPActive() {\n    // console.log('getRelToListWhenSPActive',userEnteredSellPc);\n    let { userEnteredSellPc = 0, hits } = this.state;\n    console.log('userEnteredSellPc RelACtive', userEnteredSellPc);\n    let relToList = '';\n    if (!hits.length) {\n      return relToList;\n    }\n    if (userEnteredSellPc === '') {\n      return 0;\n    }\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    relToList = ((userEnteredSellPc - listPrice) / listPrice) * 100;\n    console.log('getRelToListWhenSPActive', relToList);\n    return round(relToList, 2);\n  }\n\n  getTPWhenSPActive() {\n    // console.log('getTPWhenSPActive');\n    let { userEnteredSellPc = 0, userEnteredWeight, hits } = this.state;\n    let totalPrice = '';\n    if (!hits.length) {\n      return totalPrice;\n    }\n    if (userEnteredSellPc === '') {\n      return 0;\n    }\n    //calculate total price\n    console.log(\n      'userEnteredSellPc',\n      userEnteredSellPc,\n      'userEnteredWeight',\n      userEnteredWeight\n    );\n    totalPrice = userEnteredSellPc * userEnteredWeight;\n    console.log('totalPrice Tp Active', round(totalPrice, 2));\n    return round(totalPrice, 2);\n  }\n\n  getRelToListWhenTPActive() {\n    // console.log('getRelToListWhenTPActive');\n    let {\n      hits,\n      userEnteredTotalPc,\n      userEnteredWeight\n    } = this.state;\n    let relToList = '';\n    if (!hits.length) {\n      return relToList;\n    }\n    if (userEnteredTotalPc === '') {\n      return 0;\n    }\n    if (userEnteredWeight === '') {\n      return 0;\n    }\n    // console.log('userEnteredWeight Tp',userEnteredWeight)\n    let listPrice = hits[0]._source.ppc;\n    // console.log('listPrice', listPrice);\n    let sellPrice = userEnteredTotalPc / userEnteredWeight;\n    // console.log('sellPriceaa', sellPrice);\n    relToList = ((sellPrice - listPrice) / listPrice) * 100;\n    // console.log('relToList', relToList)\n    return round(relToList, 2);\n  }\n\n  getSPWhenTPActive() {\n    let { userEnteredTotalPc, userEnteredWeight, hits } = this.state;\n    // console.log('getSPWhenTPActive');\n    let listPrice = hits[0] && hits[0]._source.ppc;\n    let sellPrice = '';\n    if (!hits.length) {\n      return sellPrice;\n    }\n    sellPrice = userEnteredTotalPc / userEnteredWeight;\n    // console.log('sellPricessA', sellPrice);\n    return round(sellPrice, 2);\n  }\n\n  convertPriceToCode(wsprice) {\n    if (isNaN(wsprice) || wsprice === null || wsprice === '' || wsprice === 0)\n      return '';\n\n    wsprice = Number(wsprice);\n\n    var price = wsprice.toFixed(2).toString();\n\n    var cprice = '';\n    var priceO = '';\n\n    for (var i = 0; i < price.length; i++) {\n      var p = price.charAt(i);\n      if (p === '.') {\n        break;\n      }\n\n      var lastChar;\n\n      if (p === '1') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'B';\n            priceO += p;\n          }\n        } else {\n          cprice += 'B';\n          priceO += p;\n        }\n      } else if (p === '2') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'I';\n            priceO += p;\n          }\n        } else {\n          cprice += 'I';\n          priceO += p;\n        }\n      } else if (p === '3') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'G';\n            priceO += p;\n          }\n        } else {\n          cprice += 'G';\n          priceO += p;\n        }\n      } else if (p === '4') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'E';\n            priceO += p;\n          }\n        } else {\n          cprice += 'E';\n          priceO += p;\n        }\n      } else if (p === '5') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'S';\n            priceO += p;\n          }\n        } else {\n          cprice += 'S';\n          priceO += p;\n        }\n      } else if (p === '6') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'T';\n            priceO += p;\n          }\n        } else {\n          cprice += 'T';\n          priceO += p;\n        }\n      } else if (p === '7') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'H';\n            priceO += p;\n          }\n        } else {\n          cprice += 'H';\n          priceO += p;\n        }\n      } else if (p === '8') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'A';\n            priceO += p;\n          }\n        } else {\n          cprice += 'A';\n          priceO += p;\n        }\n      } else if (p === '9') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'L';\n            priceO += p;\n          }\n        } else {\n          cprice += 'L';\n          priceO += p;\n        }\n      } else if (p === '0') {\n        if (priceO !== '') {\n          lastChar = priceO.slice(-1);\n\n          if (lastChar === p) {\n            cprice += 'X';\n            priceO += p;\n          } else {\n            cprice += 'F';\n            priceO += p;\n          }\n        } else {\n          cprice += 'F';\n          priceO += p;\n        }\n      }\n    }\n    return cprice;\n  }\n\n  render() {\n    let {\n      isLoading,\n      activeInputField,\n      userEnteredRelToList,\n      userEnteredTotalPc,\n      userEnteredSellPc,\n      userEnteredWeight,\n      hits,\n      initialRendering,\n      checkBoxStatus,\n      weightInclude,\n      shape,\n      color,\n      clarity,\n      userVal\n      // prifix\n    } = this.state;\n    // console.log('userEnteredRelToList', userEnteredRelToList);\n    let listPrice = this.getListPrice();\n    console.log('render lp',listPrice)\n    let relToList = '';\n    let relToList1 = 0;\n    let sellPrice = listPrice; // initially SP is same as LP\n    console.log('weightInclude', weightInclude);\n    // console.log('sellPrice',sellPrice)\n    let totalPrice = round(listPrice * userEnteredWeight, 2);\n    // console.log('totalPrice',totalPrice)\n    let weight = userEnteredWeight;\n    console.log('activeInputField', activeInputField);\n    switch (activeInputField) {\n      case 'REL_TO_LIST':\n        console.log('REL_TO_LIST');\n        console.log('REL_TO_LIST');\n        relToList = userEnteredRelToList;\n        relToList1 = isEmpty(relToList) ? userVal : userEnteredRelToList;\n        sellPrice = this.getSPWhenRelToListActive();\n        totalPrice = this.getTPWhenRelToListActive();\n        break;\n\n      case 'SELL_PRICE':\n        console.log('SELL_PRICE');\n        relToList = this.getRelToListWhenSPActive();\n        relToList1 = isEmpty(relToList)\n          ? this.getRelToListWhenSPActive()\n          : userVal;\n        totalPrice = this.getTPWhenSPActive();\n        sellPrice = userEnteredSellPc;\n        console.log('userEnteredSellPc in case', userEnteredSellPc);\n\n        break;\n\n      case 'TOTAL_PRICE':\n        console.log('TOTAL_PRICE userEnteredTotalPc');\n\n        relToList = this.getRelToListWhenTPActive();\n        relToList1 = isEmpty(relToList)\n          ? this.getRelToListWhenTPActive()\n          : userVal;\n        totalPrice = userEnteredTotalPc;\n        sellPrice = this.getSPWhenTPActive();\n\n        break;\n\n      default:\n        break;\n    }\n    // console.log(userVal,'relToList1',relToList1)\n\n    let resultHtml = '';\n    if (!initialRendering && !hits.length && userEnteredWeight !== '') {\n      resultHtml = <div className=\"No-records\">No record(s) available.</div>;\n    } else {\n      resultHtml = (\n        <fieldset className=\"form-fieldset\">\n          <legend className=\"form-legend\">Result:</legend>\n          {isLoading && <div className=\"App-Loader\">Fetching results...</div>}\n\n          <div className=\"outputSectionRow\">\n            <div className=\"outputColumns xs-device-set-margin\">\n              <div className=\"show-code-field\">\n                <label\n                  htmlFor=\"ValueToCodeConvert\"\n                  className=\"conversion-label\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    className=\"show-code-input\"\n                    id=\"ValueToCodeConvert\"\n                    checked={checkBoxStatus}\n                    onChange={this.handleCheckBoxStatusChange}\n                  />\n                  <span>Show Code</span>\n                </label>\n              </div>\n            </div>\n            <div className=\"outputColumns xs-device-set-margin\">\n              <h2 className=\"form-control-label\">List Price</h2>\n              {!checkBoxStatus ? (\n                <Cleave\n                  disabled\n                  className=\"form-control\"\n                  value={listPrice}\n                  options={{ numeral: true, prefix: '$' }}\n                />\n              ) : (\n                ''\n              )}\n              {checkBoxStatus && listPrice ? (\n                <div className=\"showCode\">\n                  {this.convertPriceToCode(listPrice)}\n                </div>\n              ) : null}\n            </div>\n            <div className=\"outputColumns xs-device-set-margin\">\n              <h2 className=\"form-control-label\">Sell Price</h2>\n\n              {!checkBoxStatus ? (\n                <Cleave\n                  className=\"form-control\"\n                  value={sellPrice}\n                  options={{ numeral: true, prefix: '$' }}\n                  onChange={this.sellPcChange}\n                />\n              ) : (\n                ''\n              )}\n              {checkBoxStatus && sellPrice ? (\n                <div className=\"showCode\">\n                  {this.convertPriceToCode(sellPrice)}\n                </div>\n              ) : null}\n            </div>\n            <div className=\"outputColumns xs-device-set-margin\">\n              <h2 className=\"form-control-label\">Total Price</h2>\n\n              {!checkBoxStatus ? (\n                <Cleave\n                  className=\"form-control\"\n                  value={totalPrice}\n                  options={{ numeral: true, prefix: '$' }}\n                  onChange={this.totalPriceChange}\n                />\n              ) : (\n                ''\n              )}\n              {checkBoxStatus && totalPrice ? (\n                <div className=\"showCode\">\n                  {this.convertPriceToCode(totalPrice)}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </fieldset>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <form id=\"result-all\">\n          <ReactiveBase\n            app={AppbaseApp}\n            credentials={AppbaseAppCredential}\n            type={AppbaseAppType}\n          >\n            <div id=\"input-area\">\n              <fieldset className=\"form-fieldset\">\n                <legend className=\"form-legend\">FillUp Details:</legend>\n\n                <div className=\"inputSectionRow\">\n                  <div className=\"inputColumns xs-device-set-margin\">\n                    <SingleDropdownList\n                      componentId=\"shape\"\n                      className=\"reactive-form-control\"\n                      dataField=\"shape.keyword\"\n                      title=\"Shape\"\n                      showCount={false}\n                      onValueChange={this.handleShapeDropdownChange}\n                    />\n                  </div>\n                  <div className=\"inputColumns xs-device-set-margin\">\n                    <SingleDropdownList\n                      componentId=\"color\"\n                      className=\"reactive-form-control\"\n                      dataField=\"color.keyword\"\n                      title=\"Color\"\n                      showCount={false}\n                      onValueChange={this.handleColorDropdownChange}\n                    />\n                  </div>\n                  <div className=\"inputColumns xs-device-set-margin\">\n                    <SingleDropdownList\n                      componentId=\"clarity\"\n                      className=\"reactive-form-control\"\n                      dataField=\"clarity.keyword\"\n                      title=\"Clarity\"\n                      showCount={false}\n                      transformData={list => {\n                        var ordered_array;\n                        ordered_array = this.mapOrder(list, item_order, 'key');\n                        return ordered_array;\n                      }}\n                      onValueChange={this.handleClarityDropdownChange}\n                    />\n                  </div>\n                  <div className=\"inputColumns\">\n                    <h2 className=\"form-control-label\">Weight</h2>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      onChange={this.handleWeightInputChange}\n                      value={weight}\n                    />\n                    <label className=\"include-weight checkbox-inline\">\n                      <input\n                        type=\"checkbox\"\n                        checked={weightInclude}\n                        onChange={this.handleWeightChange}\n                      />\n                      Use 10ct price list\n                    </label>\n                  </div>\n                  <div className=\"inputColumns xs-device-set-margin\">\n                    <h2 className=\"form-control-label\">Rel to List</h2>\n                    {userEnteredWeight && color && shape && clarity ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        onChange={this.changeRelToList}\n                        value={relToList1}\n                      />\n                    ) : (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        onChange={this.changeRelToList}\n                        value={0}\n                        disabled\n                      />\n                    )}\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n\n            <div id=\"result-area\">\n              {resultHtml}\n              <SelectedFilters\n                render={props => {\n                  const {\n                    clearAllLabel,\n                    clearValues\n                  } = props;\n\n                  const reset = e => {\n                    e.preventDefault();\n                    console.log('reset');\n                    clearValues();\n                    this.clearAll();\n                  };\n\n                  const filters = (\n                    <button onClick={e => reset(e)}>{clearAllLabel}</button>\n                  );\n\n                  return filters;\n                }}\n              />\n            </div>\n          </ReactiveBase>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// Constants\nexport const HOST_URL = 'https://scalr.api.appbase.io';\n// export const AppbaseApp = 'kwfl-rapnet-prices';\n// export const AppbaseAppCredential =\n//   'kg4GbKwx6:063eeb44-18e9-48c9-b5a0-4541d889597f';\n//   export const AppbaseAppType = 'rapnetpricingtuestest2';\n\n// export const AppbaseApp = 'diamond-calculator';\n// export const AppbaseAppCredential =\n//   'ZoAZdR9Di:f965f532-665b-4b35-8028-d7cb470e0c95';\n// export const AppbaseAppType = 'CalculatorData';\n\n// export const AppbaseApp = 'kwfl-rapnet-prices';\n// export const AppbaseAppCredential = 'iEGTZLfs5:6bfbbbcb-fc5e-4822-90a2-59369eb83f4b';\nexport const AppbaseApp = 'kwfl-rapnet-prices';\nexport const AppbaseAppCredential =\n  'kg4GbKwx6:063eeb44-18e9-48c9-b5a0-4541d889597f';\nexport const AppbaseAppType = 'rapnetpricingtuestest2';\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from './App.js';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route exact path=\"*\" component={App} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes.js';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}